/**
 * Tour espec√≠fico para el m√≥dulo de Gesti√≥n Integral de Permisos (RolesIntegrado)
 * Se carga autom√°ticamente cuando el usuario visita el m√≥dulo
 */

// Funci√≥n para iniciar el tour del m√≥dulo de roles integrado
function iniciarTourRolesIntegrado() {
    const tour = new Shepherd.Tour({
        useModalOverlay: true,
        defaultStepOptions: {
            scrollTo: true,
            scrollToHandler: function(el) {
                // Mejorar el scroll para asegurar que el elemento est√© bien visible
                if (el) {
                    // Calcular la posici√≥n para centrar el elemento en la ventana visible
                    const rect = el.getBoundingClientRect();
                    const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
                    const elementTop = rect.top + scrollTop;
                    const offset = 150; // Espacio adicional para ver mejor el elemento
                    
                    // Hacer scroll con comportamiento suave
                    window.scrollTo({
                        top: elementTop - offset,
                        behavior: 'smooth'
                    });
                    
                    // Resaltar temporalmente el elemento para mejor visibilidad
                    el.style.transition = 'box-shadow 0.3s ease-in-out';
                    el.style.boxShadow = '0 0 0 4px rgba(22, 163, 74, 0.5)';
                    setTimeout(() => {
                        el.style.boxShadow = 'none';
                    }, 1500);
                }
            },
            cancelIcon: {
                enabled: true
            },
            // Hacer que los tooltips sean arrastrables
            floatingUIOptions: {
                middleware: [{
                    name: 'draggable',
                    options: {
                        draggable: true,
                        getDragContainer: () => document.body
                    }
                }]
            },
            // A√±adir un texto para indicar que se puede arrastrar
            when: {
                show: function() {
                    // A√±adir indicador de arrastrable despu√©s de mostrar el paso
                    setTimeout(() => {
                        const currentStep = tour.currentStep;
                        if (currentStep && currentStep.el) {
                            const header = currentStep.el.querySelector('.shepherd-header');
                            
                            if (header && !header.querySelector('.drag-indicator')) {
                                const dragIndicator = document.createElement('div');
                                dragIndicator.className = 'drag-indicator';
                                dragIndicator.innerHTML = '<i class="fas fa-arrows-alt"></i>';
                                dragIndicator.style.cssText = `
                                    font-size: 12px;
                                    color: #888;
                                    margin-left: 10px;
                                    cursor: move;
                                `;
                                dragIndicator.title = "Arrastrar para mover";
                                
                                if (header.querySelector('.shepherd-cancel-icon')) {
                                    header.insertBefore(dragIndicator, header.querySelector('.shepherd-cancel-icon'));
                                } else {
                                    header.appendChild(dragIndicator);
                                }
                            }
                        }
                    }, 100);
                }
            }
        },
        onComplete: function() {
            localStorage.setItem('rolesintegrado-tour-completed', 'true');
            Swal.fire({
                title: '¬°Tour Completado!',
                text: 'Ya conoces las principales funcionalidades de la gesti√≥n integral de permisos.',
                icon: 'success',
                confirmButtonText: 'Excelente',
                confirmButtonColor: '#16a34a'
            });
        },
        onCancel: function() {
            console.log('Tour de gesti√≥n integral de permisos cancelado');
        }
    });

    // Paso 1: Bienvenida al m√≥dulo
    tour.addStep({
        title: '¬°Bienvenido a la Gesti√≥n Integral de Permisos! üõ°Ô∏è',
        text: 'Te guiaremos por las principales funcionalidades de este m√≥dulo. Aqu√≠ puedes configurar de forma detallada qu√© m√≥dulos y acciones espec√≠ficas puede realizar cada rol en el sistema.',
        buttons: [
            {
                text: 'Omitir Tour',
                action: tour.cancel,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Comenzar Tour',
                action: tour.next,
                classes: 'shepherd-button-primary'
            }
        ]
    });

    // Paso 2: T√≠tulo y descripci√≥n
    tour.addStep({
        title: 'Gesti√≥n Integral de Permisos üìã',
        text: 'Esta herramienta te permite configurar los permisos del sistema con m√°ximo detalle. A diferencia del m√≥dulo b√°sico de roles, aqu√≠ puedes asignar permisos espec√≠ficos por cada acci√≥n dentro de cada m√≥dulo.',
        attachTo: {
            element: 'h1',
            on: 'bottom'
        },
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Siguiente',
                action: tour.next,
                classes: 'shepherd-button-primary'
            }
        ]
    });

    // Paso 3: Selector de roles con acci√≥n interactiva
    tour.addStep({
        id: 'seleccion-rol',
        title: 'Selecci√≥n de Rol üë•',
        text: 'Primero debes seleccionar un rol para configurar sus permisos. En este desplegable encontrar√°s todos los roles disponibles en el sistema. <br><br><b>¬°Acci√≥n requerida!</b> Por favor, selecciona un rol del desplegable para continuar y ver las opciones de configuraci√≥n.',
        attachTo: {
            element: '#selectRol',
            on: 'bottom'
        },
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Ya seleccion√© un rol',
                action: function() {
                    // Verificar si se ha seleccionado un rol
                    const selectRol = document.querySelector('#selectRol');
                    const selectedRole = selectRol.value;
                    
                    if (selectedRole && selectedRole !== "") {
                        // Si ya hay un rol seleccionado, continuar
                        // A√±adir un peque√±o retraso para que la interfaz se actualice
                        setTimeout(() => {
                            tour.next();
                        }, 800);
                    } else {
                        // Si no hay rol seleccionado, mostrar mensaje
                        Swal.fire({
                            title: 'Selecciona un rol',
                            text: 'Por favor, selecciona un rol para continuar con el tour',
                            icon: 'info',
                            confirmButtonColor: '#16a34a'
                        });
                        
                        // Resaltar el selector para llamar la atenci√≥n
                        selectRol.style.transition = 'box-shadow 0.3s ease-in-out';
                        selectRol.style.boxShadow = '0 0 0 4px rgba(22, 163, 74, 0.5)';
                        setTimeout(() => {
                            selectRol.style.boxShadow = 'none';
                        }, 2000);
                    }
                },
                classes: 'shepherd-button-primary'
            }
        ],
        beforeShowPromise: function() {
            return new Promise(function(resolve) {
                // Destacar visualmente el selector
                const selectRol = document.querySelector('#selectRol');
                if (selectRol) {
                    selectRol.style.transition = 'box-shadow 0.3s ease-in-out';
                    selectRol.style.boxShadow = '0 0 0 4px rgba(22, 163, 74, 0.5)';
                    
                    // A√±adir un event listener para detectar cuando el usuario selecciona un rol
                    const originalOnChange = selectRol.onchange;
                    selectRol.onchange = function(e) {
                        // Ejecutar el comportamiento original primero
                        if (originalOnChange) originalOnChange.call(this, e);
                        
                        // Despu√©s actualizar el bot√≥n del paso actual
                        if (tour.getCurrentStep() && tour.getCurrentStep().id === 'seleccion-rol') {
                            const selectedValue = this.value;
                            if (selectedValue && selectedValue !== "") {
                                // Destacar el bot√≥n de "Ya seleccion√© un rol" para indicar que puede continuar
                                const nextButton = document.querySelector('.shepherd-button-primary');
                                if (nextButton) {
                                    nextButton.style.animation = 'pulse 1s infinite';
                                    nextButton.style.backgroundColor = '#15803d';
                                }
                            }
                        }
                    };
                    
                    setTimeout(() => {
                        selectRol.style.boxShadow = 'none';
                    }, 2000);
                }
                resolve();
            });
        }
    });

    // Paso 4: Resumen de asignaciones
    tour.addStep({
        id: 'resumen-asignaciones',
        title: 'Resumen de Asignaciones üìä',
        text: 'Este panel muestra un resumen de los permisos asignados al rol seleccionado: el nombre del rol, cu√°ntos m√≥dulos tiene acceso y cu√°ntos permisos espec√≠ficos est√°n configurados.',
        attachTo: {
            element: '#resumenContainer',
            on: 'top'
        },
        beforeShowPromise: function() {
            return new Promise(function(resolve) {
                // Verificamos en tiempo real si el contenedor est√° visible
                const container = document.querySelector('#resumenContainer');
                
                // Si el contenedor est√° oculto, esperamos hasta 3 segundos a que aparezca
                if (container.classList.contains('hidden')) {
                    let attempts = 0;
                    const checkVisibility = setInterval(() => {
                        attempts++;
                        if (!container.classList.contains('hidden') || attempts > 30) {
                            clearInterval(checkVisibility);
                            resolve();
                        }
                    }, 100);
                } else {
                    resolve();
                }
            });
        },
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Siguiente',
                action: tour.next,
                classes: 'shepherd-button-primary'
            }
        ]
    });

    // Paso 5: Contenedor de m√≥dulos y permisos
    tour.addStep({
        id: 'panel-configuracion',
        title: 'Panel de Configuraci√≥n üß©',
        text: 'En esta √°rea ver√°s todos los m√≥dulos del sistema. Para cada uno, podr√°s activar o desactivar el acceso completo o configurar permisos espec√≠ficos como crear, editar, eliminar y ver.',
        attachTo: {
            element: '#modulosPermisosContainer',
            on: 'top'
        },
        beforeShowPromise: function() {
            return new Promise(function(resolve) {
                // Verificamos en tiempo real si el contenedor est√° visible
                const container = document.querySelector('#modulosPermisosContainer');
                
                // Si el contenedor est√° oculto, esperamos hasta 3 segundos a que aparezca
                if (container.classList.contains('hidden')) {
                    let attempts = 0;
                    const checkVisibility = setInterval(() => {
                        attempts++;
                        if (!container.classList.contains('hidden') || attempts > 30) {
                            clearInterval(checkVisibility);
                            resolve();
                        }
                    }, 100);
                } else {
                    resolve();
                }
            });
        },
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Siguiente',
                action: tour.next,
                classes: 'shepherd-button-primary'
            }
        ]
    });

    // Paso 6: Lista de m√≥dulos
    tour.addStep({
        id: 'tarjetas-modulos',
        title: 'Tarjetas de M√≥dulos üì±',
        text: 'Cada tarjeta representa un m√≥dulo del sistema. Al activar un m√≥dulo, el rol tendr√° acceso a √©l. Puedes tambi√©n expandir las opciones para configurar permisos espec√≠ficos dentro de cada m√≥dulo.<br><br><i>Prueba a hacer clic en alguno de los m√≥dulos para ver sus permisos espec√≠ficos.</i>',
        attachTo: {
            element: '#listaModulosPermisos',
            on: 'top'
        },
        beforeShowPromise: function() {
            return new Promise(function(resolve) {
                // Verificamos en tiempo real si el contenedor est√° visible
                const container = document.querySelector('#listaModulosPermisos');
                
                if (container) {
                    // Esperamos a que se carguen los m√≥dulos (al menos uno)
                    let attempts = 0;
                    const checkContent = setInterval(() => {
                        attempts++;
                        
                        // Verificar si hay alg√∫n m√≥dulo cargado (excluyendo el mensaje de selecci√≥n)
                        const childrenCount = container.children.length;
                        const hasModules = childrenCount > 0 && 
                            (!container.querySelector('.text-center.py-8') || 
                             container.children.length > 1);
                        
                        if (hasModules || attempts > 50) {  // Ampliamos el tiempo de espera
                            clearInterval(checkContent);
                            
                            // Resaltamos un m√≥dulo para llamar la atenci√≥n
                            setTimeout(() => {
                                const firstModule = Array.from(container.children).find(el => 
                                    el.classList.contains('bg-white') || 
                                    el.querySelector('.bg-white'));
                                
                                if (firstModule) {
                                    firstModule.style.transition = 'all 0.5s ease';
                                    firstModule.style.boxShadow = '0 0 0 4px rgba(22, 163, 74, 0.5)';
                                    setTimeout(() => {
                                        firstModule.style.boxShadow = '';
                                    }, 2000);
                                }
                            }, 500);
                            
                            resolve();
                        }
                    }, 100);
                } else {
                    resolve();
                }
            });
        },
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Siguiente',
                action: tour.next,
                classes: 'shepherd-button-primary'
            }
        ]
    });

    // Paso 7: Permisos espec√≠ficos de un m√≥dulo
    tour.addStep({
        id: 'permisos-especificos',
        title: 'Permisos Espec√≠ficos ‚úÖ',
        text: `<p>Cuando expandes un m√≥dulo, puedes configurar estos permisos espec√≠ficos:</p>
              <ul class="list-disc pl-5 text-left">
                <li class="mb-1"><b>Ver:</b> Permite acceder al m√≥dulo.</li>
                <li class="mb-1"><b>Crear:</b> Permite a√±adir nuevos registros.</li>
                <li class="mb-1"><b>Editar:</b> Permite modificar registros existentes.</li>
                <li class="mb-1"><b>Eliminar:</b> Permite borrar registros.</li>
              </ul>
              <p class="mt-2">Si activas "Acceso Completo", se otorgan todos los permisos autom√°ticamente.</p>`,
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Siguiente',
                action: tour.next,
                classes: 'shepherd-button-primary'
            }
        ],
        beforeShowPromise: function() {
            return new Promise(function(resolve) {
                const container = document.querySelector('#listaModulosPermisos');
                
                if (container) {
                    // Intentar encontrar un m√≥dulo que ya tenga los permisos expandidos
                    let expandedModule = null;
                    const allModules = container.querySelectorAll('[data-module-id]');
                    
                    for (const module of allModules) {
                        const permissionsContainer = module.querySelector('.permissions-container');
                        if (permissionsContainer && !permissionsContainer.classList.contains('hidden')) {
                            expandedModule = module;
                            break;
                        }
                    }
                    
                    // Si no hay ninguno expandido, intentamos expandir el primero
                    if (!expandedModule && allModules.length > 0) {
                        const firstModule = allModules[0];
                        const toggleButton = firstModule.querySelector('button[data-toggle-id]');
                        
                        if (toggleButton) {
                            toggleButton.click();
                            setTimeout(() => {
                                const permissionsContainer = firstModule.querySelector('.permissions-container');
                                if (permissionsContainer) {
                                    permissionsContainer.style.transition = 'all 0.5s ease';
                                    permissionsContainer.style.boxShadow = '0 0 0 4px rgba(22, 163, 74, 0.5)';
                                    setTimeout(() => {
                                        permissionsContainer.style.boxShadow = '';
                                    }, 2000);
                                }
                                resolve();
                            }, 500);
                        } else {
                            resolve();
                        }
                    } else if (expandedModule) {
                        // Si ya hay uno expandido, lo resaltamos
                        const permissionsContainer = expandedModule.querySelector('.permissions-container');
                        if (permissionsContainer) {
                            permissionsContainer.style.transition = 'all 0.5s ease';
                            permissionsContainer.style.boxShadow = '0 0 0 4px rgba(22, 163, 74, 0.5)';
                            setTimeout(() => {
                                permissionsContainer.style.boxShadow = '';
                            }, 2000);
                        }
                        resolve();
                    } else {
                        resolve();
                    }
                } else {
                    resolve();
                }
            });
        }
    });

    // Paso 8: Botones de acci√≥n
    const btnGuardar = document.querySelector('#btnGuardarAsignaciones');
    if (btnGuardar) {
        tour.addStep({
            id: 'boton-guardar',
            title: 'Guardar Configuraci√≥n üíæ',
            text: 'Una vez que hayas configurado todos los permisos, haz clic en este bot√≥n para guardar los cambios. Recuerda que los cambios no se aplicar√°n hasta que confirmes con este bot√≥n.',
            attachTo: {
                element: '#btnGuardarAsignaciones',
                on: 'left'
            },
            popperOptions: {
                modifiers: [{
                    name: 'offset',
                    options: {
                        offset: [0, 10]
                    }
                }]
            },
            buttons: [
                {
                    text: 'Anterior',
                    action: tour.back,
                    classes: 'shepherd-button-secondary'
                },
                {
                    text: 'Siguiente',
                    action: tour.next,
                    classes: 'shepherd-button-primary'
                }
            ]
        });
    }

    // Paso 8: Bot√≥n cancelar
    const btnCancelar = document.querySelector('#btnCancelar');
    if (btnCancelar) {
        tour.addStep({
            title: 'Cancelar Cambios ‚Ü©Ô∏è',
            text: 'Si quieres descartar los cambios realizados y volver al estado anterior, puedes usar este bot√≥n.',
            attachTo: {
                element: '#btnCancelar',
                on: 'top-start'
            },
            popperOptions: {
                modifiers: [{
                    name: 'offset',
                    options: {
                        offset: [0, 10]
                    }
                }]
            },
            buttons: [
                {
                    text: 'Anterior',
                    action: tour.back,
                    classes: 'shepherd-button-secondary'
                },
                {
                    text: 'Siguiente',
                    action: tour.next,
                    classes: 'shepherd-button-primary'
                }
            ]
        });
    }

    // Paso 9: Notificaciones
    const notificationToast = document.querySelector('#notificationToast');
    if (notificationToast) {
        tour.addStep({
            title: 'Sistema de Notificaciones üîî',
            text: 'Recibir√°s notificaciones sobre el √©xito o fallo de tus operaciones en este √°rea. Te informar√° cuando los permisos se guarden correctamente o si ocurre alg√∫n error.',
            attachTo: {
                element: '#notificationToast',
                on: 'bottom'
            },
            buttons: [
                {
                    text: 'Anterior',
                    action: tour.back,
                    classes: 'shepherd-button-secondary'
                },
                {
                    text: 'Siguiente',
                    action: tour.next,
                    classes: 'shepherd-button-primary'
                }
            ]
        });
    }

    // Paso 10: Consejos de uso
    tour.addStep({
        id: 'consejos-uso',
        title: 'Consejos para la Gesti√≥n de Permisos üí°',
        text: '<ul class="list-disc pl-5 text-left">' +
              '<li class="mb-2">Usa la opci√≥n "Acceso Completo" solo para roles que necesiten control total sobre un m√≥dulo.</li>' +
              '<li class="mb-2">El permiso "ver" es fundamental; sin √©l, el usuario no podr√° acceder al m√≥dulo aunque tenga otros permisos.</li>' +
              '<li class="mb-2">Recuerda guardar los cambios antes de cambiar de rol o salir del m√≥dulo.</li>' +
              '<li>Revisa peri√≥dicamente los permisos para mantener la seguridad del sistema.</li>' +
              '</ul>',
        attachTo: {
            element: '#listaModulosPermisos',
            on: 'top'
        },
        popperOptions: {
            modifiers: [{
                name: 'offset',
                options: {
                    offset: [0, 20]
                }
            }]
        },
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Siguiente',
                action: tour.next,
                classes: 'shepherd-button-primary'
            }
        ]
    });

    // Paso 11: Finalizaci√≥n
    tour.addStep({
        id: 'finalizacion',
        title: '¬°Configuraci√≥n Completa! üöÄ',
        text: 'Ya conoces las principales funcionalidades de la Gesti√≥n Integral de Permisos. Recuerda que una buena configuraci√≥n de permisos es fundamental para la seguridad del sistema. Puedes volver a ejecutar este tour desde el bot√≥n de ayuda cuando lo necesites.',
        attachTo: {
            element: '#btnGuardarAsignaciones',
            on: 'top-end'
        },
        popperOptions: {
            modifiers: [{
                name: 'offset',
                options: {
                    offset: [20, 20]
                }
            }]
        },
        buttons: [
            {
                text: 'Anterior',
                action: tour.back,
                classes: 'shepherd-button-secondary'
            },
            {
                text: 'Finalizar Tour',
                action: tour.complete,
                classes: 'shepherd-button-primary'
            }
        ]
    });

    // Iniciar el tour
    tour.start();
}

// Funci√≥n para mostrar el bot√≥n de ayuda
function agregarBotonAyudaRolesIntegrado() {
    // Verificar si ya existe el bot√≥n
    if (document.querySelector('#rolesintegrado-help-btn')) {
        return;
    }

    // Crear bot√≥n de ayuda flotante
    const helpButton = document.createElement('button');
    helpButton.id = 'rolesintegrado-help-btn';
    helpButton.innerHTML = '<i class="fas fa-question-circle"></i>';
    helpButton.className = 'fixed bottom-6 right-6 bg-green-600 hover:bg-green-700 text-white p-4 rounded-full shadow-lg z-50 transition-all duration-300 hover:scale-110';
    helpButton.style.cssText = `
        position: fixed !important;
        bottom: 24px !important;
        right: 24px !important;
        width: 56px !important;
        height: 56px !important;
        border-radius: 50% !important;
        background-color: #16a34a !important;
        color: white !important;
        border: none !important;
        cursor: pointer !important;
        box-shadow: 0 10px 25px rgba(0,0,0,0.15) !important;
        z-index: 1000 !important;
        transition: all 0.3s ease !important;
        display: flex !important;
        align-items: center !important;
        justify-content: center !important;
        font-size: 20px !important;
    `;
    
    helpButton.setAttribute('title', 'Iniciar tour de gesti√≥n integral de permisos');
    helpButton.addEventListener('click', iniciarTourRolesIntegrado);
    helpButton.addEventListener('mouseenter', function() {
        this.style.transform = 'scale(1.1)';
        this.style.backgroundColor = '#15803d';
    });
    helpButton.addEventListener('mouseleave', function() {
        this.style.transform = 'scale(1)';
        this.style.backgroundColor = '#16a34a';
    });
    
    // A√±adir una peque√±a animaci√≥n al bot√≥n para hacerlo m√°s visible
    helpButton.style.animation = 'bounce 2s infinite';
    
    // A√±adir estilo para la animaci√≥n si no existe
    if (!document.querySelector('#tour-animations')) {
        const styleEl = document.createElement('style');
        styleEl.id = 'tour-animations';
        styleEl.textContent = `
            @keyframes bounce {
                0%, 20%, 50%, 80%, 100% {transform: translateY(0);}
                40% {transform: translateY(-12px);}
                60% {transform: translateY(-5px);}
            }
            @keyframes pulse {
                0% {transform: scale(1);}
                50% {transform: scale(1.05);}
                100% {transform: scale(1);}
            }
        `;
        document.head.appendChild(styleEl);
    }
    
    document.body.appendChild(helpButton);
}

// Auto-inicializar cuando se carga el DOM
document.addEventListener('DOMContentLoaded', function() {
    // Verificar si estamos en el m√≥dulo de roles integrado
    if (window.location.pathname.includes('RolesIntegrado')) {
        
        // Esperar a que todos los elementos se carguen completamente
        setTimeout(function() {
            // Agregar bot√≥n de ayuda
            agregarBotonAyudaRolesIntegrado();
            
            // Verificar si el sistema est√° listo (roles cargados en el selector)
            function verificarSistemaListo() {
                const selectRol = document.querySelector('#selectRol');
                return selectRol && selectRol.options.length > 1; // M√°s de la opci√≥n por defecto
            }
            
            // Funci√≥n para verificar y mostrar el tour
            function mostrarTourSiNecesario() {
                if (verificarSistemaListo()) {
                    // Auto-iniciar tour solo la primera vez
                    if (!localStorage.getItem('rolesintegrado-tour-completed')) {
                        // Preguntar si quiere hacer el tour
                        Swal.fire({
                            title: '¬øQuieres hacer un tour del m√≥dulo?',
                            text: 'Te mostramos las principales funcionalidades de la gesti√≥n integral de permisos',
                            icon: 'question',
                            showCancelButton: true,
                            confirmButtonText: 'S√≠, empezar tour',
                            cancelButtonText: 'Ahora no',
                            confirmButtonColor: '#16a34a',
                            cancelButtonColor: '#6b7280'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                iniciarTourRolesIntegrado();
                            } else {
                                // Si dice que no, marcar como completado para no molestarlo m√°s
                                localStorage.setItem('rolesintegrado-tour-completed', 'true');
                            }
                        });
                    }
                } else {
                    // Si a√∫n no est√° listo, intentar de nuevo en un momento
                    setTimeout(mostrarTourSiNecesario, 500);
                }
            }
            
            // Iniciar el proceso de verificaci√≥n
            setTimeout(mostrarTourSiNecesario, 1000);
            
        }, 700); // Un poco m√°s de tiempo para cargar los componentes din√°micos
    }
});

// Tambi√©n agregar funci√≥n global para reiniciar el tour
window.reiniciarTourRolesIntegrado = function() {
    localStorage.removeItem('rolesintegrado-tour-completed');
    iniciarTourRolesIntegrado();
};
